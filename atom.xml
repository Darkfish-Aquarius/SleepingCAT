<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>SleepingCAT</title>
  
  <subtitle>我只愿面朝大海，春暖花开</subtitle>
  <link href="/SleepingCAT/atom.xml" rel="self"/>
  
  <link href="https://sleepingcat526.github.io/SleepingCAT/"/>
  <updated>2020-05-06T02:01:41.247Z</updated>
  <id>https://sleepingcat526.github.io/SleepingCAT/</id>
  
  <author>
    <name>SleepingCAT</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>来源于十八哥的 MySQL复习</title>
    <link href="https://sleepingcat526.github.io/SleepingCAT/2020/05/05/MySQL%E5%A4%8D%E4%B9%A0/"/>
    <id>https://sleepingcat526.github.io/SleepingCAT/2020/05/05/MySQL复习/</id>
    <published>2020-05-05T15:16:20.327Z</published>
    <updated>2020-05-06T02:01:41.247Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\SleepingCAT\assets\css\APlayer.min.css"><script src="\SleepingCAT\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\SleepingCAT\assets\js\Meting.min.js"></script><h1 id="一-复习前的准备"><a href="#一-复习前的准备" class="headerlink" title="一    复习前的准备"></a>一    复习前的准备</h1><p>1:确认你已安装wamp<br>2:确认你已安装ecshop,并且ecshop的数据库名为shop</p><h1 id="二-基础知识"><a href="#二-基础知识" class="headerlink" title="二    基础知识"></a>二    基础知识</h1><h2 id="1-数据库的连接"><a href="#1-数据库的连接" class="headerlink" title="1.数据库的连接"></a>1.数据库的连接</h2><p><code>mysql -u -p -h</code><br>-u 用户名<br>-p 密码<br>-h host主机</p><h2 id="2-库级知识"><a href="#2-库级知识" class="headerlink" title="2.库级知识"></a>2.库级知识</h2><p>2.1 显示数据库: <code>show databases;</code><br>2.2 选择数据库: <code>use dbname;</code><br>2.3 创建数据库: <code>create database dbname charset utf8;</code><br>2.3 删除数据库: <code>drop database dbname;</code></p><h2 id="3-表级操作"><a href="#3-表级操作" class="headerlink" title="3.表级操作"></a>3.表级操作</h2><h3 id="3-1-显示库下面的表"><a href="#3-1-显示库下面的表" class="headerlink" title="3.1 显示库下面的表"></a>3.1 显示库下面的表</h3><p><code>show tables;</code></p><h3 id="3-2-查看表的结构"><a href="#3-2-查看表的结构" class="headerlink" title="3.2 查看表的结构"></a>3.2 查看表的结构</h3><p><code>desc tableName;</code></p><h3 id="3-3-查看表的创建过程"><a href="#3-3-查看表的创建过程" class="headerlink" title="3.3 查看表的创建过程"></a>3.3 查看表的创建过程</h3><p><code>show create table  tableName;</code></p><h3 id="3-4-创建表"><a href="#3-4-创建表" class="headerlink" title="3.4 创建表"></a>3.4 创建表</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">create table tbName (</span><br><span class="line">列名称1　列类型　[列参数]　[not null default ],</span><br><span class="line">....列2...</span><br><span class="line">....</span><br><span class="line">列名称N　列类型　[列参数]　[not null default ]</span><br><span class="line">)engine myisam/innodb charset utf8/gbk</span><br></pre></td></tr></table></figure><p>3.4的例子:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">create table user (</span><br><span class="line">    id int auto_increment,</span><br><span class="line">    name varchar(20) not null default &apos;&apos;,</span><br><span class="line">    age tinyint unsigned not null default 0,</span><br><span class="line">   index id (id)</span><br><span class="line">   )engine=innodb charset=utf8;</span><br></pre></td></tr></table></figure><p>注:innodb是表引擎,也可以是myisam或其他,但最常用的是myisam和innodb,charset 常用的有utf8,gbk;</p><h3 id="3-5-修改表"><a href="#3-5-修改表" class="headerlink" title="3.5 修改表"></a>3.5 修改表</h3><p>3.5.1    修改表之增加列</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">alter table tbName add 列名称１　列类型　[列参数]　[not null default ]　#(add之后的旧列名之后的语法和创建表时的列声明一样)</span><br></pre></td></tr></table></figure><p>3.5.2    修改表之修改列</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">alter table tbName change 旧列名  新列名  列类型　[列参数]　[not null default ]   #(注:旧列名之后的语法和创建表时的列声明一样)</span><br></pre></td></tr></table></figure><p>3.5.3    修改表之减少列</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">alter table tbName drop 列名称;</span><br></pre></td></tr></table></figure><p>3.5.4    修改表之增加主键</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">alter table tbName add primary key(主键所在列名);</span><br></pre></td></tr></table></figure><p>例:alter table goods add primary key(id)<br>该例是把主键建立在id列上</p><p>3.5.5    修改表之删除主键</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">alter table tbName drop primary key;</span><br></pre></td></tr></table></figure><p>3.5.6    修改表之增加索引</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">alter table tbName add [unique|fulltext] index 索引名(列名);</span><br></pre></td></tr></table></figure><p>3.5.7    修改表之删除索引</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">alter table tbName drop index 索引名;</span><br></pre></td></tr></table></figure><p>3.5.8    清空表的数据</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">truncate tableName;</span><br></pre></td></tr></table></figure><h2 id="4-列类型讲解"><a href="#4-列类型讲解" class="headerlink" title="4.列类型讲解"></a>4.列类型讲解</h2><p>列类型:</p><h3 id="4-1整型"><a href="#4-1整型" class="headerlink" title="4.1整型"></a>4.1整型</h3><p>tinyint (0<del>255/-128</del>127)，smallint (0<del>65535/-32768</del>32767)，mediumint int bigint (参考手册11.2)</p><p>参数解释:<br>unsigned 无符号(不能为负)，zerofill 0填充，M 填充后的宽度<br>举例:tinyint unsigned;tinyint(6) zerofill;   </p><h3 id="4-2数值型"><a href="#4-2数值型" class="headerlink" title="4.2数值型"></a>4.2数值型</h3><p>​        浮点型:<code>float double</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">格式:float(M,D)  unsigned\zerofill;</span><br></pre></td></tr></table></figure><p>字符型<br>        char(m) 定长<br>        varchar(m)变长<br>        text</p><table><thead><tr><th>列</th><th>实存字符i</th><th>实占空间</th><th>利用率</th></tr></thead><tbody><tr><td>char(M)</td><td>0&lt;=i&lt;=M</td><td>M</td><td>i/m&lt;=100%</td></tr><tr><td>varchar(M)</td><td>0&lt;=i&lt;=M</td><td>i+1,2</td><td>i/i+1/2&lt;100%</td></tr></tbody></table><h3 id="4-3日期时间类型"><a href="#4-3日期时间类型" class="headerlink" title="4.3日期时间类型"></a>4.3日期时间类型</h3><table><thead><tr><th>year</th><th>YYYY</th><th>范围:1901~2155. 可输入值2位和4位(如98,2012)</th></tr></thead><tbody><tr><td>date</td><td>YYYY-MM-DD</td><td>如:2010-03-14</td></tr><tr><td>time</td><td>HH:MM:SS</td><td>如:19:26:32</td></tr><tr><td>datetime</td><td>YYYY-MM-DD  HH:MM:SS</td><td>如:2010-03-14 19:26:32</td></tr><tr><td>timestamp</td><td>YYYY-MM-DD  HH:MM:SS</td><td>特性:不用赋值,该列会为自己赋当前的具体时间</td></tr></tbody></table><h2 id="5-增删改查基本操作"><a href="#5-增删改查基本操作" class="headerlink" title="5.增删改查基本操作"></a>5.增删改查基本操作</h2><h3 id="5-1-插入数据"><a href="#5-1-插入数据" class="headerlink" title="5.1 插入数据"></a>5.1 插入数据</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">insert into 表名(col1,col2,……) values(val1,val2……); -- 插入指定列</span><br><span class="line">insert into 表名 values (,,,,); -- 插入所有列</span><br><span class="line">insert into 表名 values-- 一次插入多行 </span><br><span class="line">(val1,val2……),</span><br><span class="line">(val1,val2……),</span><br><span class="line">(val1,val2……);</span><br></pre></td></tr></table></figure><h3 id="5-2修改数据"><a href="#5-2修改数据" class="headerlink" title="5.2修改数据"></a>5.2修改数据</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">update tablename </span><br><span class="line">set </span><br><span class="line">col1=newval1,  </span><br><span class="line">col2=newval2,</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">colN=newvalN</span><br><span class="line">where 条件;</span><br></pre></td></tr></table></figure><h3 id="5-3-删除数据"><a href="#5-3-删除数据" class="headerlink" title="5.3    删除数据"></a>5.3    删除数据</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">delete from tablename where 条件;</span><br></pre></td></tr></table></figure><h3 id="5-4-select查询"><a href="#5-4-select查询" class="headerlink" title="5.4    select查询"></a>5.4    select查询</h3><h4 id="（1）条件查询-where"><a href="#（1）条件查询-where" class="headerlink" title="（1）条件查询   where"></a>（1）条件查询   where</h4><p>a. 条件表达式的意义，表达式为真，则该行取出<br>b.  比较运算符  = ，!=，&lt; &gt; &lt;=  &gt;=<br>c.  like , not like (‘%’匹配任意多个字符,’_’匹配任意单个字符) </p><p>​     in , not in , between and<br>d. is null , is not null            </p><h4 id="（2）分组-group-by"><a href="#（2）分组-group-by" class="headerlink" title="（2）分组    group by"></a>（2）分组    group by</h4><p>​            一般要配合5个聚合函数使用:max,min,sum,avg,count</p><h4 id="（3）筛选-having"><a href="#（3）筛选-having" class="headerlink" title="（3）筛选   having"></a>（3）筛选   having</h4><h4 id="（4）排序-order-by"><a href="#（4）排序-order-by" class="headerlink" title="（4）排序   order by"></a>（4）排序   order by</h4><h4 id="（5）限制-limit"><a href="#（5）限制-limit" class="headerlink" title="（5）限制   limit"></a>（5）限制   limit</h4><h2 id="6-连接查询"><a href="#6-连接查询" class="headerlink" title="6.连接查询"></a>6.连接查询</h2><h3 id="6-1-左连接-left-join-on"><a href="#6-1-左连接-left-join-on" class="headerlink" title="6.1    左连接    .. left join .. on"></a>6.1    左连接    .. left join .. on</h3><p>​    table A left join table B on tableA.col1 = tableB.col2 ;<br>  例句:<br>  <code>select 列名 from table A left join table B on tableA.col1 = tableB.col2</code></p><h3 id="6-2-右链接-right-join"><a href="#6-2-右链接-right-join" class="headerlink" title="6.2    右链接    right join"></a>6.2    右链接    right join</h3><h3 id="6-3-内连接-inner-join"><a href="#6-3-内连接-inner-join" class="headerlink" title="6.3    内连接    inner join"></a>6.3    内连接    inner join</h3><p>左右连接都是以在左边的表的数据为准,沿着左表查右表.<br>内连接是以两张表都有的共同部分数据为准,也就是左右连接的数据之交集.</p><h2 id="7-子查询"><a href="#7-子查询" class="headerlink" title="7.子查询"></a>7.子查询</h2><h3 id="7-1-where-型子查询"><a href="#7-1-where-型子查询" class="headerlink" title="7.1    where 型子查询"></a>7.1    where 型子查询</h3><p>内层sql的返回值在where后作为条件表达式的一部分<br>  例句: select * from tableA where colA = (select colB from tableB where …);</p><h3 id="7-2-from-型子查询"><a href="#7-2-from-型子查询" class="headerlink" title="7.2    from 型子查询"></a>7.2    from 型子查询</h3><p>内层sql查询结果,作为一张表,供外层的sql语句再次查询<br>  例句:select * from (select * from …) as tableName where ….</p><h2 id="8-字符集"><a href="#8-字符集" class="headerlink" title="8.字符集"></a>8.字符集</h2><p>  客服端sql编码<code>character_set_client</code><br>  服务器转化后的sql编码<code>character_set_connection</code><br>  服务器返回给客户端的结果集编码<code>character_set_results</code><br>  快速把以上3个变量设为相同值<code>set names 字符集</code></p><p>   存储引擎 engine=1\2<br>  1 Myisam  速度快 不支持事务 回滚<br>  2 Innodb  速度慢 支持事务,回滚</p><p>  ①开启事务<code>start transaction</code><br>  ②运行sql;<br>  ③提交,同时生效\回滚<code>commit\rollback</code></p><p>  触发器 trigger<br>  监视地点:表<br>  监视行为:增 删 改<br>  触发时间:after\before<br>  触发事件:增 删 改</p><p>  创建触发器语法</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">create trigger tgName</span><br><span class="line">after/before insert/delete/update </span><br><span class="line">on tableName</span><br><span class="line">for each row</span><br><span class="line">sql; -- 触发语句</span><br><span class="line">  删除触发器:drop trigger tgName;</span><br></pre></td></tr></table></figure><h2 id="9-索引"><a href="#9-索引" class="headerlink" title="9.索引"></a>9.索引</h2><p> 提高查询速度,但是降低了增删改的速度,所以使用索引时,要综合考虑.<br> 索引不是越多越好,一般我们在常出现于条件表达式中的列加索引.<br> 值越分散的列，索引的效果越好</p><p> 索引类型</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">primary key主键索引</span><br><span class="line"> index 普通索引</span><br><span class="line"> unique index 唯一性索引</span><br><span class="line"> fulltext index 全文索引</span><br></pre></td></tr></table></figure><h2 id="10-综合练习"><a href="#10-综合练习" class="headerlink" title="10.综合练习"></a>10.综合练习</h2><p>连接上数据库服务器<br>创建一个gbk编码的数据库<br>建立商品表和栏目表,字段如下:</p><p>商品表:goods<br>goods_id　–主键,<br>goods_name – 商品名称<br>cat_id  – 栏目id<br>brand_id – 品牌id<br>goods_sn – 货号<br>goods_number – 库存量<br>shop_price  – 价格<br>goods_desc　–商品详细描述</p><p>栏目表:category<br>cat_id –主键<br>cat_name – 栏目名称<br>parent_id – 栏目的父id</p><p>建表完成后,作以下操作:<br>删除goods表的goods_desc 字段,及货号字段<br>并增加字段:click_count  – 点击量</p><p>在goods_name列上加唯一性索引<br>在shop_price列上加普通索引<br>在clcik_count列上加普通索引<br>删除click_count列上的索引</p><p>对goods表插入以下数据:</p><p><img src="https://i.loli.net/2020/05/06/4VA1T2UCqvHtZ5h.jpg" alt="来源于十八哥的 MySQL复习_goods"></p><h1 id="三-查询知识"><a href="#三-查询知识" class="headerlink" title="三    查询知识"></a>三    查询知识</h1><p>注:以下查询基于ecshop网站的商品表(ecs_goods)在练习时可以只取部分列,方便查看.</p><h2 id="1-基础查询-where的练习"><a href="#1-基础查询-where的练习" class="headerlink" title="1.基础查询 where的练习"></a>1.基础查询 where的练习</h2><p>查出满足以下条件的商品</p><h3 id="1-1-主键为32的商品"><a href="#1-1-主键为32的商品" class="headerlink" title="1.1    主键为32的商品"></a>1.1    主键为32的商品</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select goods_id,goods_name,shop_price from ecs_goods where goods_id=32;</span><br></pre></td></tr></table></figure><h3 id="1-2-不属第3栏目的所有商品"><a href="#1-2-不属第3栏目的所有商品" class="headerlink" title="1.2    不属第3栏目的所有商品"></a>1.2    不属第3栏目的所有商品</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select goods_id,cat_id,goods_name,shop_price  from ecs_goods where cat_id!=3;</span><br></pre></td></tr></table></figure><h3 id="1-3-本店价格高于3000元的商品"><a href="#1-3-本店价格高于3000元的商品" class="headerlink" title="1.3    本店价格高于3000元的商品"></a>1.3    本店价格高于3000元的商品</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select goods_id,cat_id,goods_name,shop_price  from ecs_goods where shop_price &gt;3000;</span><br></pre></td></tr></table></figure><h3 id="1-4-本店价格低于或等于100元的商品"><a href="#1-4-本店价格低于或等于100元的商品" class="headerlink" title="1.4    本店价格低于或等于100元的商品"></a>1.4    本店价格低于或等于100元的商品</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select goods_id,cat_id,goods_name,shop_price from ecs_goods where shop_price &lt;=100;</span><br></pre></td></tr></table></figure><h3 id="1-5-取出第4栏目或第11栏目的商品-不许用or"><a href="#1-5-取出第4栏目或第11栏目的商品-不许用or" class="headerlink" title="1.5    取出第4栏目或第11栏目的商品(不许用or)"></a>1.5    取出第4栏目或第11栏目的商品(不许用or)</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select goods_id,cat_id,goods_name,shop_price  from ecs_goods where cat_id in (4,11);</span><br></pre></td></tr></table></figure><h3 id="1-6-取出100-lt-价格-lt-500的商品-不许用and"><a href="#1-6-取出100-lt-价格-lt-500的商品-不许用and" class="headerlink" title="1.6    取出100&lt;=价格&lt;=500的商品(不许用and)"></a>1.6    取出100&lt;=价格&lt;=500的商品(不许用and)</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select goods_id,cat_id,goods_name,shop_price  from ecs_goods where shop_price between 100 and 500;</span><br></pre></td></tr></table></figure><h3 id="1-7-取出不属于第3栏目且不属于第11栏目的商品-and-或not-in分别实现"><a href="#1-7-取出不属于第3栏目且不属于第11栏目的商品-and-或not-in分别实现" class="headerlink" title="1.7    取出不属于第3栏目且不属于第11栏目的商品(and,或not in分别实现)"></a>1.7    取出不属于第3栏目且不属于第11栏目的商品(and,或not in分别实现)</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select goods_id,cat_id,goods_name,shop_price  from ecs_goods where cat_id!=3 and cat_id!=11;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select goods_id,cat_id,goods_name,shop_price  from ecs_goods where cat_id not in (3,11);</span><br></pre></td></tr></table></figure><h3 id="1-8-取出价格大于100且小于300-或者大于4000且小于5000的商品"><a href="#1-8-取出价格大于100且小于300-或者大于4000且小于5000的商品" class="headerlink" title="1.8    取出价格大于100且小于300,或者大于4000且小于5000的商品()"></a>1.8    取出价格大于100且小于300,或者大于4000且小于5000的商品()</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select goods_id,cat_id,goods_name,shop_price  from ecs_goods where shop_price&gt;100 and shop_price &lt;300 or shop_price &gt;4000 and shop_price &lt;5000;</span><br></pre></td></tr></table></figure><h3 id="1-9-取出第3个栏目下面价格-lt-1000或-gt-3000-并且点击量-gt-5的系列商品"><a href="#1-9-取出第3个栏目下面价格-lt-1000或-gt-3000-并且点击量-gt-5的系列商品" class="headerlink" title="1.9    取出第3个栏目下面价格&lt;1000或&gt;3000,并且点击量&gt;5的系列商品"></a>1.9    取出第3个栏目下面价格&lt;1000或&gt;3000,并且点击量&gt;5的系列商品</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select goods_id,cat_id,goods_name,shop_price,click_count from ecs_goods where cat_id=3 and (shop_price &lt;1000 or shop_price&gt;3000) and click_count&gt;5;</span><br></pre></td></tr></table></figure><h3 id="1-10-取出第1个栏目下面的商品-注意-1栏目下面没商品-但其子栏目下有"><a href="#1-10-取出第1个栏目下面的商品-注意-1栏目下面没商品-但其子栏目下有" class="headerlink" title="1.10    取出第1个栏目下面的商品(注意:1栏目下面没商品,但其子栏目下有)"></a>1.10    取出第1个栏目下面的商品(注意:1栏目下面没商品,但其子栏目下有)</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select goods_id,cat_id,goods_name,shop_price,click_count from ecs_goods where cat_id in (2,3,4,5);</span><br></pre></td></tr></table></figure><h3 id="1-11-取出名字以”诺基亚”开头的商品"><a href="#1-11-取出名字以”诺基亚”开头的商品" class="headerlink" title="1.11    取出名字以”诺基亚”开头的商品"></a>1.11    取出名字以”诺基亚”开头的商品</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select goods_id,cat_id,goods_name,shop_price  from ecs_goods     where goods_name like &apos;诺基亚%&apos;;</span><br></pre></td></tr></table></figure><h3 id="1-12-取出名字为”诺基亚Nxx”的手机"><a href="#1-12-取出名字为”诺基亚Nxx”的手机" class="headerlink" title="1.12    取出名字为”诺基亚Nxx”的手机"></a>1.12    取出名字为”诺基亚Nxx”的手机</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select goods_id,cat_id,goods_name,shop_price  from ecs_goods where goods_name like &apos;诺基亚N__&apos;;</span><br></pre></td></tr></table></figure><h3 id="1-13-取出名字不以”诺基亚”开头的商品"><a href="#1-13-取出名字不以”诺基亚”开头的商品" class="headerlink" title="1.13    取出名字不以”诺基亚”开头的商品"></a>1.13    取出名字不以”诺基亚”开头的商品</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select goods_id,cat_id,goods_name,shop_price from ecs_goos where goods_name not like &apos;诺基亚%&apos;;</span><br></pre></td></tr></table></figure><h3 id="1-14-取出第3个栏目下面价格在1000到3000之间-并且点击量-gt-5-“诺基亚”开头的系列商品"><a href="#1-14-取出第3个栏目下面价格在1000到3000之间-并且点击量-gt-5-“诺基亚”开头的系列商品" class="headerlink" title="1.14    取出第3个栏目下面价格在1000到3000之间,并且点击量&gt;5 “诺基亚”开头的系列商品"></a>1.14    取出第3个栏目下面价格在1000到3000之间,并且点击量&gt;5 “诺基亚”开头的系列商品</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select goods_id,cat_id,goods_name,shop_price from ecs_goods where </span><br><span class="line">cat_id=3 and shop_price&gt;1000 and shop_price &lt;3000 and click_count&gt;5 and goods_name like &apos;诺基亚%&apos;;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select goods_id,cat_id,goods_name,shop_price from ecs_goods where </span><br><span class="line">shop_price between 1000 and 3000 and cat_id=3 and click_count&gt;5 and goods_name like &apos;诺基亚%&apos;;</span><br></pre></td></tr></table></figure><h3 id="1-15-一道面试题"><a href="#1-15-一道面试题" class="headerlink" title="1.15    一道面试题"></a>1.15    一道面试题</h3><p>有如下表和数组<br>把num值处于[20,29]之间,改为20<br>num值处于[30,39]之间的,改为30</p><p><img src="https://i.loli.net/2020/05/06/UupyfIGMRw4AeE5.jpg" alt="来源于十八哥的MySQL复习_一道面试题"></p><h3 id="1-16-练习题"><a href="#1-16-练习题" class="headerlink" title="1.16    练习题"></a>1.16    练习题</h3><p>把good表中商品名为’诺基亚xxxx’的商品,改为’HTCxxxx’,提示:大胆的把列看成变量,参与运算,甚至调用函数来处理 .<br>substring(),concat()</p><h2 id="2-分组查询group"><a href="#2-分组查询group" class="headerlink" title="2    分组查询group"></a>2    分组查询group</h2><h3 id="2-1-查出最贵的商品的价格"><a href="#2-1-查出最贵的商品的价格" class="headerlink" title="2.1    查出最贵的商品的价格"></a>2.1    查出最贵的商品的价格</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select max(shop_price) from ecs_goods;</span><br></pre></td></tr></table></figure><h3 id="2-2-查出最大-最新-的商品编号"><a href="#2-2-查出最大-最新-的商品编号" class="headerlink" title="2.2    查出最大(最新)的商品编号"></a>2.2    查出最大(最新)的商品编号</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select max(goods_id) from ecs_goods;</span><br></pre></td></tr></table></figure><h3 id="2-3-查出最便宜的商品的价格"><a href="#2-3-查出最便宜的商品的价格" class="headerlink" title="2.3    查出最便宜的商品的价格"></a>2.3    查出最便宜的商品的价格</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select min(shop_price) from ecs_goods;</span><br></pre></td></tr></table></figure><h3 id="2-4-查出最旧-最小-的商品编号"><a href="#2-4-查出最旧-最小-的商品编号" class="headerlink" title="2.4    查出最旧(最小)的商品编号"></a>2.4    查出最旧(最小)的商品编号</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select min(goods_id) from ecs_goods;</span><br></pre></td></tr></table></figure><h3 id="2-5-查询该店所有商品的库存总量"><a href="#2-5-查询该店所有商品的库存总量" class="headerlink" title="2.5    查询该店所有商品的库存总量"></a>2.5    查询该店所有商品的库存总量</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select sum(goods_number) from ecs_goods;</span><br></pre></td></tr></table></figure><h3 id="2-6-查询所有商品的平均价"><a href="#2-6-查询所有商品的平均价" class="headerlink" title="2.6    查询所有商品的平均价"></a>2.6    查询所有商品的平均价</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select avg(shop_price) from ecs_goods;</span><br></pre></td></tr></table></figure><h3 id="2-7-查询该店一共有多少种商品"><a href="#2-7-查询该店一共有多少种商品" class="headerlink" title="2.7    查询该店一共有多少种商品"></a>2.7    查询该店一共有多少种商品</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select count(*) from ecs_goods;</span><br></pre></td></tr></table></figure><h3 id="2-8-查询每个栏目下面"><a href="#2-8-查询每个栏目下面" class="headerlink" title="2.8    查询每个栏目下面"></a>2.8    查询每个栏目下面</h3><p>最贵商品价格<br>最低商品价格<br>商品平均价格<br>商品库存量<br>商品种类<br>提示:(5个聚合函数,sum,avg,max,min,count与group综合运用)</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select cat_id,max(shop_price) from ecs_goods  group by cat_id;</span><br></pre></td></tr></table></figure><h2 id="3-having与group综合运用查询"><a href="#3-having与group综合运用查询" class="headerlink" title="3    having与group综合运用查询"></a>3    having与group综合运用查询</h2><h3 id="3-1-查询该店的商品比市场价所节省的价格"><a href="#3-1-查询该店的商品比市场价所节省的价格" class="headerlink" title="3.1    查询该店的商品比市场价所节省的价格"></a>3.1    查询该店的商品比市场价所节省的价格</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select goods_id,goods_name,market_price-shop_price as j from ecs_goods ;</span><br></pre></td></tr></table></figure><h3 id="3-2-查询每个商品所积压的货款-提示-库存-单价"><a href="#3-2-查询每个商品所积压的货款-提示-库存-单价" class="headerlink" title="3.2    查询每个商品所积压的货款(提示:库存*单价)"></a>3.2    查询每个商品所积压的货款(提示:库存*单价)</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select goods_id,goods_name,goods_number*shop_price  from ecs_goods</span><br></pre></td></tr></table></figure><h3 id="3-3-查询该店积压的总货款"><a href="#3-3-查询该店积压的总货款" class="headerlink" title="3.3    查询该店积压的总货款"></a>3.3    查询该店积压的总货款</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select sum(goods_number*shop_price) from ecs_goods;</span><br></pre></td></tr></table></figure><h3 id="3-4-查询该店每个栏目下面积压的货款"><a href="#3-4-查询该店每个栏目下面积压的货款" class="headerlink" title="3.4    查询该店每个栏目下面积压的货款"></a>3.4    查询该店每个栏目下面积压的货款</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select cat_id,sum(goods_number*shop_price) as k from ecs_goods group by cat_id;</span><br></pre></td></tr></table></figure><h3 id="3-5-查询比市场价省钱200元以上的商品及该商品所省的钱-where和having分别实现"><a href="#3-5-查询比市场价省钱200元以上的商品及该商品所省的钱-where和having分别实现" class="headerlink" title="3.5    查询比市场价省钱200元以上的商品及该商品所省的钱(where和having分别实现)"></a>3.5    查询比市场价省钱200元以上的商品及该商品所省的钱(where和having分别实现)</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select goods_id,goods_name,market_price-shop_price as k from ecs_goods where market_price-shop_price &gt;200;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select goods_id,goods_name,market_price-shop_price as k from ecs_goods having k &gt;200;</span><br></pre></td></tr></table></figure><h3 id="3-6-查询积压货款超过2W元的栏目-以及该栏目积压的货款"><a href="#3-6-查询积压货款超过2W元的栏目-以及该栏目积压的货款" class="headerlink" title="3.6    查询积压货款超过2W元的栏目,以及该栏目积压的货款"></a>3.6    查询积压货款超过2W元的栏目,以及该栏目积压的货款</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select cat_id,sum(goods_number*shop_price) as k from ecs_goods group by cat_id having k&gt;20000</span><br></pre></td></tr></table></figure><h3 id="3-7-where-having-group综合练习题"><a href="#3-7-where-having-group综合练习题" class="headerlink" title="3.7    where-having-group综合练习题"></a>3.7    where-having-group综合练习题</h3><h3 id><a href="#" class="headerlink" title></a><img src="https://i.loli.net/2020/05/06/LnlEKeB3rVzx72u.jpg" alt="where-having-group综合练习题"></h3><p>要求：查询出2门及2门以上不及格者的平均成绩</p><p><img src="https://i.loli.net/2020/05/06/M2GHVrei8IXJd1u.jpg" alt="where-having-group综合练习题_错误的做法"></p><p><img src="https://i.loli.net/2020/05/06/BoKwlUjLPd2Yus1.jpg" alt="where-having-group综合练习题_正确的思路1"></p><p><img src="https://i.loli.net/2020/05/06/3AYOKxz6Hhvuey1.jpg" alt="where-having-group综合练习题_正确的思路2"></p><h2 id="4-order-by与limit查询"><a href="#4-order-by与limit查询" class="headerlink" title="4    order by与limit查询"></a>4    order by与limit查询</h2><h3 id="4-1-按价格由高到低排序"><a href="#4-1-按价格由高到低排序" class="headerlink" title="4.1    按价格由高到低排序"></a>4.1    按价格由高到低排序</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select goods_id,goods_name,shop_price from ecs_goods order by shop_price desc;</span><br></pre></td></tr></table></figure><h3 id="4-2-按发布时间由早到晚排序"><a href="#4-2-按发布时间由早到晚排序" class="headerlink" title="4.2    按发布时间由早到晚排序"></a>4.2    按发布时间由早到晚排序</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select goods_id,goods_name,add_time from ecs_goods order by add_time;</span><br></pre></td></tr></table></figure><h3 id="4-3-接栏目由低到高排序-栏目内部按价格由高到低排序"><a href="#4-3-接栏目由低到高排序-栏目内部按价格由高到低排序" class="headerlink" title="4.3    接栏目由低到高排序,栏目内部按价格由高到低排序"></a>4.3    接栏目由低到高排序,栏目内部按价格由高到低排序</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select goods_id,cat_id,goods_name,shop_price from ecs_goods order by cat_id ,shop_price desc;</span><br></pre></td></tr></table></figure><h3 id="4-4-取出价格最高的前三名商品"><a href="#4-4-取出价格最高的前三名商品" class="headerlink" title="4.4    取出价格最高的前三名商品"></a>4.4    取出价格最高的前三名商品</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select goods_id,goods_name,shop_price from ecs_goods order by shop_price desc limit 3;</span><br></pre></td></tr></table></figure><h3 id="4-5-取出点击量前三名到前5名的商品"><a href="#4-5-取出点击量前三名到前5名的商品" class="headerlink" title="4.5    取出点击量前三名到前5名的商品"></a>4.5    取出点击量前三名到前5名的商品</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select goods_id,goods_name,click_count from ecs_goods order by click_count desc limit 2,3;</span><br></pre></td></tr></table></figure><h2 id="5-连接查询"><a href="#5-连接查询" class="headerlink" title="5    连接查询"></a>5    连接查询</h2><h3 id="5-1-取出所有商品的商品名-栏目名-价格"><a href="#5-1-取出所有商品的商品名-栏目名-价格" class="headerlink" title="5.1    取出所有商品的商品名,栏目名,价格"></a>5.1    取出所有商品的商品名,栏目名,价格</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select goods_name,cat_name,shop_price from ecs_goods left join ecs_category on ecs_goods.cat_id=ecs_category.cat_id;</span><br></pre></td></tr></table></figure><h3 id="5-2-取出第4个栏目下的商品的商品名-栏目名-价格"><a href="#5-2-取出第4个栏目下的商品的商品名-栏目名-价格" class="headerlink" title="5.2    取出第4个栏目下的商品的商品名,栏目名,价格"></a>5.2    取出第4个栏目下的商品的商品名,栏目名,价格</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select goods_name,cat_name,shop_price from ecs_goods left join ecs_category on ecs_goods.cat_id=ecs_category.cat_id where ecs_goods.cat_id = 4;</span><br></pre></td></tr></table></figure><h3 id="5-3-取出第4个栏目下的商品的商品名-栏目名-与品牌名"><a href="#5-3-取出第4个栏目下的商品的商品名-栏目名-与品牌名" class="headerlink" title="5.3    取出第4个栏目下的商品的商品名,栏目名,与品牌名"></a>5.3    取出第4个栏目下的商品的商品名,栏目名,与品牌名</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select goods_name,cat_name,brand_name from ecs_goods left join ecs_category on ecs_goods.cat_id=ecs_category.cat_id left join ecs_brand on ecs_goods.brand_id=ecs_brand.brand_id where ecs_goods.cat_id = 4;</span><br></pre></td></tr></table></figure><h3 id="5-4-用友面试题"><a href="#5-4-用友面试题" class="headerlink" title="5.4    用友面试题"></a>5.4    用友面试题</h3><p>根据给出的表结构按要求写出SQL语句。<img src="https://i.loli.net/2020/05/06/lbiIVC643awkRTO.jpg" alt="用友面试题"></p><p><img src="https://i.loli.net/2020/05/06/kHG6j7WaKqXCFA4.jpg" alt="用友面试题答案"></p><h2 id="6-union查询"><a href="#6-union查询" class="headerlink" title="6    union查询"></a>6    union查询</h2><h3 id="6-1-把ecs-comment-ecs-feedback两个表中的数据-各取出4列-并把结果集union成一个结果集"><a href="#6-1-把ecs-comment-ecs-feedback两个表中的数据-各取出4列-并把结果集union成一个结果集" class="headerlink" title="6.1    把ecs_comment,ecs_feedback两个表中的数据,各取出4列,并把结果集union成一个结果集"></a>6.1    把ecs_comment,ecs_feedback两个表中的数据,各取出4列,并把结果集union成一个结果集</h3><p><img src="https://i.loli.net/2020/05/06/YpnyX9RvehuGSIN.jpg" alt="学员面试题"></p><p><img src="https://i.loli.net/2020/05/06/FD3MLl6NntpvGsC.jpg" alt="学员面试题答案"></p><h2 id="7-子查询-1"><a href="#7-子查询-1" class="headerlink" title="7    子查询"></a>7    子查询</h2><h3 id="7-1-查询出最新一行商品-以商品编号最大为最新-用子查询实现"><a href="#7-1-查询出最新一行商品-以商品编号最大为最新-用子查询实现" class="headerlink" title="7.1    查询出最新一行商品(以商品编号最大为最新,用子查询实现)"></a>7.1    查询出最新一行商品(以商品编号最大为最新,用子查询实现)</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select goods_id,goods_name from ecs_goods where goods_id =(select max(goods_id) from ecs_goods);</span><br></pre></td></tr></table></figure><h3 id="7-2-查询出编号为19的商品的栏目名称-用左连接查询和子查询分别"><a href="#7-2-查询出编号为19的商品的栏目名称-用左连接查询和子查询分别" class="headerlink" title="7.2    查询出编号为19的商品的栏目名称(用左连接查询和子查询分别)"></a>7.2    查询出编号为19的商品的栏目名称(用左连接查询和子查询分别)</h3><h3 id="7-3-用where型子查询把ecs-goods表中的每个栏目下面最新的商品取出来"><a href="#7-3-用where型子查询把ecs-goods表中的每个栏目下面最新的商品取出来" class="headerlink" title="7.3    用where型子查询把ecs_goods表中的每个栏目下面最新的商品取出来"></a>7.3    用where型子查询把ecs_goods表中的每个栏目下面最新的商品取出来</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select goods_id,goods_name,cat_id from ecs_goods where goods_id in (select max(goods_id) from ecs_goods group by cat_id);</span><br></pre></td></tr></table></figure><h3 id="7-4-用from型子查询把ecs-goods表中的每个栏目下面最新的商品取出来"><a href="#7-4-用from型子查询把ecs-goods表中的每个栏目下面最新的商品取出来" class="headerlink" title="7.4    用from型子查询把ecs_goods表中的每个栏目下面最新的商品取出来"></a>7.4    用from型子查询把ecs_goods表中的每个栏目下面最新的商品取出来</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select * from (select goods_id,cat_id,goods_name from ecs_goods order by goods_id desc) as t group by cat_id;</span><br></pre></td></tr></table></figure><h3 id="7-5-用exists型子查询-查出所有有商品的栏目"><a href="#7-5-用exists型子查询-查出所有有商品的栏目" class="headerlink" title="7.5    用exists型子查询,查出所有有商品的栏目"></a>7.5    用exists型子查询,查出所有有商品的栏目</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select * from category where exists (select * from goods where goods.cat_id=category.cat_id);</span><br></pre></td></tr></table></figure><h2 id="创建触发器"><a href="#创建触发器" class="headerlink" title="创建触发器"></a>创建触发器</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CREATE  trigger tg2 after insert on ord for each row update goods set goods_number=goods_number-new.num where id=new.gid</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CREATE trigger tg3 after delete on ord for each row update goods set goods_number=good_number+old.num where id=old.gid</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CREATE  trigger tg4 after update on ord for each row update goods set goods_number=goods_number+old.num-new.num where id=old.gid</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://github.com/SleepingCAT526/SleepingCAT/blob/master/images/Java%E5%88%B6%E4%BD%9C%E6%97%A5%E5%8E%86%E8%A1%A8.jpg?raw=true&quot; alt=&quot;Image text&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="MySQL" scheme="https://sleepingcat526.github.io/SleepingCAT/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Java制作日历表</title>
    <link href="https://sleepingcat526.github.io/SleepingCAT/2019/12/28/Java%E5%88%B6%E4%BD%9C%E6%97%A5%E5%8E%86%E8%A1%A8/"/>
    <id>https://sleepingcat526.github.io/SleepingCAT/2019/12/28/Java制作日历表/</id>
    <published>2019-12-28T13:28:03.877Z</published>
    <updated>2019-12-28T14:02:28.457Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\SleepingCAT\assets\css\APlayer.min.css"><script src="\SleepingCAT\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\SleepingCAT\assets\js\Meting.min.js"></script><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/*</span><br><span class="line">最终版，实现指定月份的日历表</span><br><span class="line">*/</span><br><span class="line">package javaceshi;</span><br><span class="line">import java.util.Scanner;</span><br><span class="line">public class java10 &#123;</span><br><span class="line">       public static void main(String[] args) &#123;</span><br><span class="line">             Scanner in=new Scanner(System.in);</span><br><span class="line">             System.out.println(&quot;请输入年份：&quot;);</span><br><span class="line">             int years=in.nextInt();</span><br><span class="line">             System.out.println(&quot;请输入月份：&quot;);</span><br><span class="line">             int months=in.nextInt();</span><br><span class="line">             int sum=0;</span><br><span class="line">             for(int i=1900;i&lt;years;i++) &#123;</span><br><span class="line">                    if(i%4==0&amp;&amp;i%100!=0||i%400==0) &#123;</span><br><span class="line">                           sum+=366;</span><br><span class="line">                    &#125;else &#123;</span><br><span class="line">                           sum+=365;</span><br><span class="line">                    &#125;</span><br><span class="line">             &#125;</span><br><span class="line">             for(int j=1;j&lt;months;j++) &#123;</span><br><span class="line">                    if(j==2) &#123;</span><br><span class="line">                           if(years%4==0&amp;&amp;years%100!=0||years%400==0) &#123;</span><br><span class="line">                                 sum+=29;</span><br><span class="line">                           &#125;else &#123;</span><br><span class="line">                                 sum+=28;</span><br><span class="line">                           &#125;</span><br><span class="line">                    &#125;else &#123;</span><br><span class="line">                           if(j==4||j==6||j==9||j==11) &#123;</span><br><span class="line">                                 sum+=30;</span><br><span class="line">                           &#125;else&#123;</span><br><span class="line">                                 sum+=31;</span><br><span class="line">                           &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">             &#125;</span><br><span class="line">             sum+=1;</span><br><span class="line">             int weekday=sum%7;</span><br><span class="line">             System.out.println(&quot;日\t一\t二\t三\t四\t五\t六&quot;);</span><br><span class="line">             for(int i=1;i&lt;=weekday;i++) &#123;</span><br><span class="line">                    System.out.print(&quot;\t&quot;);</span><br><span class="line">             &#125;</span><br><span class="line">             int a;</span><br><span class="line">             if(months==2) &#123;</span><br><span class="line">                    if(years%4==0&amp;&amp;years%100!=0||years%400==0) &#123;</span><br><span class="line">                           a=29;</span><br><span class="line">                    &#125;else &#123;</span><br><span class="line">                           a=28;</span><br><span class="line">                    &#125;</span><br><span class="line">             &#125;else &#123;</span><br><span class="line">                    if(months==4||months==6||months==9||months==11) &#123;</span><br><span class="line">                           a=30;</span><br><span class="line">                    &#125;else &#123;</span><br><span class="line">                           a=31;</span><br><span class="line">                    &#125;</span><br><span class="line">             &#125;</span><br><span class="line">             for(int i=1;i&lt;=a;i++) &#123;</span><br><span class="line">                    if(sum%7==6) &#123;</span><br><span class="line">                           System.out.print(i+&quot;\n&quot;);</span><br><span class="line">                    &#125;else &#123;</span><br><span class="line">                           System.out.print(i+&quot;\t&quot;);</span><br><span class="line">                    &#125;</span><br><span class="line">                    sum++;</span><br><span class="line">             &#125;</span><br><span class="line">       &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://github.com/SleepingCAT526/SleepingCAT/blob/master/images/Java%E5%88%B6%E4%BD%9C%E6%97%A5%E5%8E%86%E8%A1%A8.jpg?raw=true&quot; alt=&quot;Image text&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Java学习笔记" scheme="https://sleepingcat526.github.io/SleepingCAT/tags/Java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Pycharm第三方库安装失败解决方案</title>
    <link href="https://sleepingcat526.github.io/SleepingCAT/2019/10/13/Pycharm%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93%E5%AE%89%E8%A3%85%E5%A4%B1%E8%B4%A5%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>https://sleepingcat526.github.io/SleepingCAT/2019/10/13/Pycharm第三方库安装失败解决方案/</id>
    <published>2019-10-13T00:29:28.947Z</published>
    <updated>2019-12-28T13:48:06.861Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\SleepingCAT\assets\css\APlayer.min.css"><script src="\SleepingCAT\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\SleepingCAT\assets\js\Meting.min.js"></script><blockquote><ul><li>首先检查是否安装pip<br>打开cmd，直接输入<code>pip</code>即可</li><li>出现<code>Could not find a version that satisfies the requirement requests (from versions: )</code><br>使用定制源进行安装：</li></ul></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">官网地址: https://wxpython.org/Phoenix/snapshot-builds/</span><br><span class="line">wxPython在PyPI的项目页面: https://pypi.org/project/wxPython/#files</span><br><span class="line">阿里源：http://mirrors.aliyun.com/pypi/simple/ </span><br><span class="line">科大源：http://pypi.mirrors.ustc.edu.cn/simple/ </span><br><span class="line">清华源：http://mirrors.tuna.tsinghua.edu.cn/pypi/simple </span><br><span class="line">官方源：https://pypi.python.org/</span><br></pre></td></tr></table></figure><p>解决方法：<br><code>pip install 第三方库名 -i http://pypi.douban.com/simple/ --trusted-host pypi.douban.com</code><br>例如安装<code>requests</code>就写成：<br><code>pip install requests -i http://pypi.douban.com/simple/ --trusted-host pypi.douban.com</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://github.com/SleepingCAT526/SleepingCAT/blob/master/images/Pycharm%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93%E5%AE%89%E8%A3%85%E5%A4%B1%E8%B4%A5%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.jpg?raw=true&quot; alt=&quot;Image text&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="python" scheme="https://sleepingcat526.github.io/SleepingCAT/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>TCP群聊服务端实现</title>
    <link href="https://sleepingcat526.github.io/SleepingCAT/2019/10/11/TCP%E7%BE%A4%E8%81%8A%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%AE%9E%E7%8E%B0/"/>
    <id>https://sleepingcat526.github.io/SleepingCAT/2019/10/11/TCP群聊服务端实现/</id>
    <published>2019-10-10T23:38:56.686Z</published>
    <updated>2019-10-13T00:19:23.169Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\SleepingCAT\assets\css\APlayer.min.css"><script src="\SleepingCAT\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\SleepingCAT\assets\js\Meting.min.js"></script><p>在Shell中运行Python</p><h2 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server = socket.socket()重新配置</span><br><span class="line"></span><br><span class="line">server.bind((&apos;192.168.142.135&apos;,9999))设置ip和端口</span><br><span class="line"></span><br><span class="line">!ss -tan查看ip和端口（!ss -tanl）</span><br><span class="line"></span><br><span class="line">server.listen()开启监听，才算绑定了端口</span><br></pre></td></tr></table></figure><h2 id="学习用源码"><a href="#学习用源码" class="headerlink" title="学习用源码"></a>学习用源码</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import socket</span><br><span class="line"></span><br><span class="line">import threading</span><br><span class="line"></span><br><span class="line">import logging</span><br><span class="line"></span><br><span class="line">import datetime</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">FORMAT = &quot;%(asctime)s %(threadname)s %(thread)d %(message)s&quot;</span><br><span class="line"></span><br><span class="line">logging.basicConfig(format=FORMAT,level=logging.INFO)</span><br><span class="line"></span><br><span class="line"># TCP Server</span><br><span class="line">class ChatServer:</span><br><span class="line"></span><br><span class="line">    def __init__(self,ip=&apos;127.0.0.1&apos;,port=9999):</span><br><span class="line"></span><br><span class="line">        self.addr = (ip,port)</span><br><span class="line"></span><br><span class="line">        self.sock = socket.socket()</span><br><span class="line"></span><br><span class="line">        self.clients = &#123;&#125;</span><br><span class="line"></span><br><span class="line">self.event = threading.Event()</span><br><span class="line"></span><br><span class="line">    def start(self):</span><br><span class="line"></span><br><span class="line">        self.sock.bind(self.addr)</span><br><span class="line"></span><br><span class="line">        self.sock.listen()#服务启动了</span><br><span class="line"></span><br><span class="line">        threading.Thread(target=self.accept,name=&apos;accept&apos;).start()</span><br><span class="line"></span><br><span class="line">    def accept(self):</span><br><span class="line"></span><br><span class="line">while not self.event.is_set():#一个线程</span><br><span class="line"></span><br><span class="line">s,raddr = self.sock.accept()#阻塞</span><br><span class="line"></span><br><span class="line">f = s.makefile(mode=&apos;rw&apos;)</span><br><span class="line"></span><br><span class="line">#logging.info(raddr)对端地址可以不看</span><br><span class="line"></span><br><span class="line">#logging.info(s,f)</span><br><span class="line"></span><br><span class="line">logging.info(s)</span><br><span class="line"></span><br><span class="line">logging.info(f)</span><br><span class="line"></span><br><span class="line">#logging.info(f.fileno())由于不支持，去除</span><br><span class="line"></span><br><span class="line">self.clients[raddr] = f</span><br><span class="line"></span><br><span class="line">threading.Thread(target=self.recv,name=&apos;recv&apos;,args=(s,raddr)).start()</span><br><span class="line"></span><br><span class="line">    #def recv(self,sock:socket.socket):#很多线程</span><br><span class="line"></span><br><span class="line">def recv(self,f,addr):#很多线程</span><br><span class="line"></span><br><span class="line">while not self.event.is_set():</span><br><span class="line"></span><br><span class="line">try:</span><br><span class="line"></span><br><span class="line">#data = sock.recv(1024)#阻塞，bytes</span><br><span class="line"></span><br><span class="line">#data = f.read()#string</span><br><span class="line"></span><br><span class="line">data = f.readline()#string,换行符\n</span><br><span class="line"></span><br><span class="line">logging.info(data)</span><br><span class="line"></span><br><span class="line">except Exception as e:</span><br><span class="line"></span><br><span class="line">logging error(e)</span><br><span class="line"></span><br><span class="line">data = b&apos;quit&apos;</span><br><span class="line"></span><br><span class="line">if data == b&apos;quit&apos;:</span><br><span class="line"></span><br><span class="line">#self.clients.pop(sock.getpeername())</span><br><span class="line"></span><br><span class="line">self.clients.pop(addr)</span><br><span class="line"></span><br><span class="line">sock.close()</span><br><span class="line"></span><br><span class="line">break</span><br><span class="line"></span><br><span class="line">msg = &quot;ack&#123;&#125;. &#123;&#125; &#123;&#125;&quot;.format(</span><br><span class="line"></span><br><span class="line">#sock.getpeername(),</span><br><span class="line"></span><br><span class="line">addr,</span><br><span class="line"></span><br><span class="line">#datetime.datetime.now(),strftime(&quot;%Y/%m/%d-%H:%M:%S&quot;), </span><br><span class="line"></span><br><span class="line">data.decode()).encode()</span><br><span class="line"></span><br><span class="line">datetime.datetime.now(),strftime(&quot;%Y/%m/%d-%H:%M:%S&quot;), </span><br><span class="line"></span><br><span class="line">data)</span><br><span class="line"></span><br><span class="line"># sock.send(&apos;ack &#123;&#125;&apos;.format(data.decode()).encode())</span><br><span class="line"></span><br><span class="line">for s in self.clients.values():</span><br><span class="line"></span><br><span class="line"># s.send(&apos;ack &#123;&#125;&apos;.format(data.decode()).encode())</span><br><span class="line"></span><br><span class="line">#s.send(msg)</span><br><span class="line"></span><br><span class="line">f.write(msg)</span><br><span class="line"></span><br><span class="line">f.flush()</span><br><span class="line"></span><br><span class="line">    def stop(self):</span><br><span class="line"></span><br><span class="line">        for s in self.clients.values():</span><br><span class="line"></span><br><span class="line">s.close()</span><br><span class="line"></span><br><span class="line">        self.sock.close()</span><br><span class="line"></span><br><span class="line">self.event.set()</span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line"></span><br><span class="line">cs = ChatServer()</span><br><span class="line"></span><br><span class="line">cs.start()</span><br><span class="line"></span><br><span class="line">while True:</span><br><span class="line"></span><br><span class="line">cmd = input(&quot;&gt;&gt;&gt;&quot;)</span><br><span class="line"></span><br><span class="line">if cmd.strip() == &apos;quit&apos;:</span><br><span class="line"></span><br><span class="line">cs.stop()</span><br><span class="line"></span><br><span class="line">threading.Event.wait(3)</span><br><span class="line"></span><br><span class="line">break</span><br><span class="line"></span><br><span class="line">logging.info(threading.enumerate())</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><p><a href="https://edu.aliyun.com/lesson_1792_15006#_15006" target="_blank" rel="noopener">TCP群聊服务端实现</a><br><a href="https://blog.csdn.net/weixin_44545253/article/details/95375086" target="_blank" rel="noopener">TCP Sockets编程 PDF——带完整书签</a><br><a href="http://www.121down.com/soft/softview-80244.html" target="_blank" rel="noopener">TCP/UDP Socket调试工具(SocketTool) v4.0绿色中文版 附使用方法</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://github.com/SleepingCAT526/SleepingCAT/blob/master/images/%E6%98%9F%E7%90%83%E5%A4%AA%E7%A9%BA%E6%98%9F%E6%98%9F%E5%AE%87%E8%88%AA%E5%91%98.jpg?raw=true&quot; alt=&quot;Image text&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="TCP" scheme="https://sleepingcat526.github.io/SleepingCAT/categories/TCP/"/>
    
    
      <category term="TCP pycharm Socket 学习笔记" scheme="https://sleepingcat526.github.io/SleepingCAT/tags/TCP-pycharm-Socket-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>在Windows上为python3.7布置pipenv虚拟环境</title>
    <link href="https://sleepingcat526.github.io/SleepingCAT/2019/10/03/%E5%9C%A8Windows%E4%B8%8A%E4%B8%BApython3.7%E5%B8%83%E7%BD%AEpipenv%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/"/>
    <id>https://sleepingcat526.github.io/SleepingCAT/2019/10/03/在Windows上为python3.7布置pipenv虚拟环境/</id>
    <published>2019-10-02T22:55:31.440Z</published>
    <updated>2019-10-15T20:46:58.989Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\SleepingCAT\assets\css\APlayer.min.css"><script src="\SleepingCAT\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\SleepingCAT\assets\js\Meting.min.js"></script><p>1.确保已安装<a href="https://www.python.org/" target="_blank" rel="noopener">python3.7</a><br>2.确认环境变量存在<a href="https://www.51zxw.net/show.aspx?id=75882&cid=711" target="_blank" rel="noopener">path路径</a><br>3.一定要以管理员的身份打开cmd,并进入到python安装路径下,默认路径类似于<code>C:\Users\26393</code>，在类似下面的路径中<code>C:\Users\26393\Anaconda3\Lib\site-packages\pip</code>找到</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from pip._internal import main as _main  # isort:skip # noqa</span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">sys.exit(_main())</span><br></pre></td></tr></table></figure><p>不要修改它，网上很多修改的方法，修改后都飘红。<br>python3安装自带pip，如果pip版本太旧，需<code>pip3 install --upgrade pip</code>升级一下。</p><blockquote><ul><li>接下来就是<code>Pipenv</code>的安装了：<br>  <code>pip install pipenv</code></li><li>接下来创建一个文件夹，并在cmd上进入该文件夹<br>  创建python3环境<br>  <code>pipenv --three</code><br>这里可能会出现<code>UnicodeDecodeError: ‘utf-8’ codec can’t decode byte 0xb6 in position 0: invalid start byte</code>，直接重启你的电脑，再次回到新建的目录下。（或者你可以关掉那些以中文名字的正在运行的程序）</li><li>在上一步新建环境的目录下,运行此命令才有效<br>  激活虚拟环境<br>  <code>pipenv shell</code></li><li>查看虚拟环境python解释器所在位置<br>  <code>pipenv --py</code></li></ul></blockquote><p>友情链接：<br><a href="https://mp.weixin.qq.com/s?src=11&timestamp=1570026443&ver=1888&signature=ZJpV9LmLivsPrW06IqV*zS3EsXffkVhOUvJDWmhI9aLdC1j4Vw2m958s1JbNN6EAue8esPdqsANwCHh8GIzzwXUt00ChWSCUqOOYt3On4dqRXT4gPyPp3gDStCCTAlqB&new=1" target="_blank" rel="noopener">什么是pip？</a><br><a href="https://blog.csdn.net/qq_20728575/article/details/82949529" target="_blank" rel="noopener">Pycharm 使用 Pipenv 新建的虚拟环境</a><br><a href="https://blog.csdn.net/marueibo/article/details/86678936" target="_blank" rel="noopener">windows/linux环境python3.7出现ssl或者tsl不可用的解决方法</a><br><a href="https://www.cnblogs.com/4wheel/p/8193255.html" target="_blank" rel="noopener">pip install xxxx报错（一大堆红色exception）【解决】</a><br><a href="http://liujiangblog.com/blog/18/" target="_blank" rel="noopener">pipenv 新款Python虚拟环境工具详解</a><br><a href="https://www.jb51.net/article/140562.htm" target="_blank" rel="noopener">Pipenv一键搭建python虚拟环境的方法</a><br><a href="https://blog.csdn.net/Yelzagubei/article/details/87554199" target="_blank" rel="noopener">pip更新出现”Traceback(most recent call last)”</a><br><a href="https://blog.csdn.net/qq_42942594/article/details/88423322" target="_blank" rel="noopener">使用pipenv install出现utf-8不能decode的问题</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://github.com/SleepingCAT526/SleepingCAT/blob/master/images/%E6%98%9F%E7%90%83%E5%A4%AA%E7%A9%BA%E6%98%9F%E6%98%9F%E5%AE%87%E8%88%AA%E5%91%98.jpg?raw=true&quot; alt=&quot;Image text&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="虚拟环境" scheme="https://sleepingcat526.github.io/SleepingCAT/tags/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/"/>
    
  </entry>
  
  <entry>
    <title>基于Github+Hexo布置Next（Pisces）主题</title>
    <link href="https://sleepingcat526.github.io/SleepingCAT/2019/09/29/%E5%9F%BA%E4%BA%8EGithub+Hexo%E5%B8%83%E7%BD%AENext%EF%BC%88Pisces%EF%BC%89%E4%B8%BB%E9%A2%98/"/>
    <id>https://sleepingcat526.github.io/SleepingCAT/2019/09/29/基于Github+Hexo布置Next（Pisces）主题/</id>
    <published>2019-09-29T12:38:36.440Z</published>
    <updated>2019-12-28T13:59:37.082Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\SleepingCAT\assets\css\APlayer.min.css"><script src="\SleepingCAT\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\SleepingCAT\assets\js\Meting.min.js"></script><h2 id="拥有自己的Github账户"><a href="#拥有自己的Github账户" class="headerlink" title="拥有自己的Github账户"></a><a href="https://blog.csdn.net/Warrior7/article/details/86303434" target="_blank" rel="noopener">拥有自己的Github账户</a></h2><h2 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">安装 Hexo</a></h2><p>安装完<a href="https://blog.csdn.net/AinUser/article/details/77609180" target="_blank" rel="noopener">git和node.js</a> 之后，打开npm，最好在一个新的文件夹里面执行<code>npm install -g hexo-cli</code><br>执行<code>hexo init &lt;folder&gt;</code>，如<code>hexo init it</code>，就创建了一个名字为<code>it</code>的文件夹<br><code>cd &lt;folder&gt;</code>即<code>cd it</code><br>最后执行<code>npm install</code><br>生成的文件夹如下：<br>    <code>.</code><br>    <code>_config.yml</code>站点配置<br>    <code>package.json</code>应用程序的信息<br>    <code>scaffolds</code>模板文件夹，文章等的模板，方便写作等。<br>    <code>node_modules</code>这个不会生成，得等到安装插件后才会生成。<br>    <code>source</code>中有<code>_posts</code>，存放稿子处；<code>_drafts</code>这个可能不会生成，存放草稿处。<br>    <code>themes</code>存放主题处，比如里面有<code>next</code>文件夹，进入，会看到里面还有一个<code>_config.yml</code>，这是主题配置。</p><blockquote><ul><li><a href="https://hexo.io/" target="_blank" rel="noopener">Hexo 官网</a></li></ul></blockquote><blockquote><ul><li><a href="https://hexo.io/themes/" target="_blank" rel="noopener">Hexo 主题</a></li></ul></blockquote><h2 id="NexT-使用文档"><a href="#NexT-使用文档" class="headerlink" title="NexT 使用文档"></a><a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">NexT 使用文档</a></h2><h2 id="站点配置"><a href="#站点配置" class="headerlink" title="站点配置"></a>站点配置</h2><p>下面所有的安装命令都用npm执行</p><blockquote><ul><li>个人基本信息</li></ul></blockquote><pre><code># Sitetitle: 站点名称subtitle: 主页副标题description: 个人描述keywords:author: 作者名称language: 语言timezone:</code></pre><blockquote><ul><li>修改默认的<code>theme: landscape</code>为<code>theme: next</code></li></ul></blockquote><blockquote><ul><li><code>deploy</code>的设置<br>  deploy:<pre><code>type: gitrepository: https://github.com/登录名/仓库名.gitbranch: master</code></pre>  如：<br>  deploy:<pre><code>type: gitrepository: https://github.com/SleepingCAT526/SleepingCAT.gitbranch: master</code></pre><img src="https://github.com/SleepingCAT526/SleepingCAT/blob/master/images/deploy.jpg?raw=true" alt="Image text"></li></ul></blockquote><p>这个配置完成之后，就可以尝试上传到github上了。</p><h3 id="hexo-clean第一步"><a href="#hexo-clean第一步" class="headerlink" title="hexo clean第一步"></a><code>hexo clean</code>第一步</h3><h3 id="hexo-g第二步"><a href="#hexo-g第二步" class="headerlink" title="hexo g第二步"></a><code>hexo g</code>第二步</h3><p>如果出现<code>ERROR Deployer not found: github</code>，请执行<code>npm install hexo-deployer-git</code><br>更多报错原因可参考：<a href="http://wp.huangshiyang.com/hexo%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88" target="_blank" rel="noopener">Hexo常见问题解决方案</a></p><h3 id="hexo-s这一步只是为了在本地浏览一下修改后的效果，默认地址：http-localhost-4000"><a href="#hexo-s这一步只是为了在本地浏览一下修改后的效果，默认地址：http-localhost-4000" class="headerlink" title="hexo s这一步只是为了在本地浏览一下修改后的效果，默认地址：http://localhost:4000"></a><code>hexo s</code>这一步只是为了在本地浏览一下修改后的效果，默认地址：<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a></h3><h3 id="hexo-d最后一步，托管到github上。"><a href="#hexo-d最后一步，托管到github上。" class="headerlink" title="hexo d最后一步，托管到github上。"></a><code>hexo d</code>最后一步，托管到github上。</h3><p>如果你是第一次上传，此时根目录下会生成一个<code>.deploy_git</code>文件夹。<br>切记，在第二次上传之前一定要手动将其删除，不然上传的还是上一次（即没修改前）的内容。</p><h2 id="设置网站图标favicon"><a href="#设置网站图标favicon" class="headerlink" title="设置网站图标favicon"></a>设置网站图标favicon</h2><p>将一张ico图标放到/themes/next/source/images目录下，按<code>/images/图片名称.png（或jpg...）</code>修改图片路径。</p><h2 id="设置RSS"><a href="#设置RSS" class="headerlink" title="设置RSS"></a>设置RSS</h2><p>切换到根目录下，执行<code>npm install --save hexo-generator-feed</code></p><blockquote><ul><li>在主题目录下的_config.yml任意处添加：</li></ul></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Extensions</span><br><span class="line"># Plugins: http://hexo.io/plugins/</span><br><span class="line">  plugins: hexo-generate-feed</span><br></pre></td></tr></table></figure><blockquote><ul><li>修改rss</li></ul></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Set rss to false to disable feed link.</span><br><span class="line"># Leave rss as empty to use site&apos;s feed link.</span><br><span class="line"># Set rss to specific value if you have burned your feed already.</span><br><span class="line">  rss: /atom.xml</span><br></pre></td></tr></table></figure><h2 id="四种主题（Schemes）"><a href="#四种主题（Schemes）" class="headerlink" title="四种主题（Schemes）"></a>四种主题（Schemes）</h2><blockquote><ul><li>路径:themes/next/_config.yml<br>增删#即可实现开关某个主题配置。</li></ul></blockquote><h2 id="动态背景"><a href="#动态背景" class="headerlink" title="动态背景"></a>动态背景</h2><pre><code>Canvas-nestthree_wavescanvas_linescanvas_sphere</code></pre><p>直接设置为true即可，如Canvas-nest: true</p><h2 id="显示当前浏览进度"><a href="#显示当前浏览进度" class="headerlink" title="显示当前浏览进度"></a>显示当前浏览进度</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Scroll percent label in b2t button</span><br><span class="line">  scrollpercent: true</span><br></pre></td></tr></table></figure><h2 id="设置-分类-和-标签"><a href="#设置-分类-和-标签" class="headerlink" title="设置[分类]和[标签]"></a>设置[分类]和[标签]</h2><blockquote><ul><li>如<code>hexo new page categories</code>，新建<code>categoriers</code>文件夹，修改里面的<code>index.md</code>为：</li></ul></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">date: xxxx-xx-xx xx:xx:xx</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><blockquote><ul><li><code>hexo new page tags</code>，新建<code>tags</code>文件夹，修改里面的<code>index.md</code>为：</li></ul></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: xxxx-xx-xx xx:xx:xx</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>部分参数示例：</p><table><thead><tr><th align="center">参数</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">title</td><td align="center">标题</td></tr><tr><td align="center">date</td><td align="center">文件建立日期</td></tr><tr><td align="center">updated</td><td align="center">文件更新日期</td></tr><tr><td align="center">comments</td><td align="center">开启评论功能</td></tr><tr><td align="center">tags</td><td align="center">标签</td></tr><tr><td align="center">categories</td><td align="center">分类</td></tr></tbody></table><h2 id="添加本地搜索菜单"><a href="#添加本地搜索菜单" class="headerlink" title="添加本地搜索菜单"></a>添加本地搜索菜单</h2><p>npm执行<code>npm install hexo-generator-searchdb --save</code>,安装插件</p><blockquote><ul><li>打开站点配置，在任意处添加：</li></ul></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">search:</span><br><span class="line">path: search.xml</span><br><span class="line">field: post</span><br><span class="line">format: html</span><br><span class="line">limit: 10000</span><br></pre></td></tr></table></figure><blockquote><ul><li>打开主题配置，搜索<code>Local search</code>，将 enable 设置为 true，启动本地搜索功能。</li></ul></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Local search</span><br><span class="line">  local_search:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure><h2 id="添加文章字数统计、阅读时长"><a href="#添加文章字数统计、阅读时长" class="headerlink" title="添加文章字数统计、阅读时长"></a>添加文章字数统计、阅读时长</h2><p>执行<code>npm install hexo-wordcount --save</code></p><blockquote><ul><li>打开主题配置，搜索<code>post_wordcount</code>，修改为：</li></ul></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Post wordcount display settings</span><br><span class="line"># Dependencies: https://github.com/willin/hexo-wordcount</span><br><span class="line">  post_wordcount:</span><br><span class="line">item_text: true</span><br><span class="line">wordcount: true # 单篇 字数统计</span><br><span class="line">min2read: true # 单篇 阅读时长</span><br><span class="line">totalcount: false # 网站 字数统计</span><br><span class="line">separated_meta: true</span><br></pre></td></tr></table></figure><p>此时文章的<code>字数统计</code>和<code>阅读时长</code>后面没有对应的xxx字,xx分钟等字样,只有数字。</p><blockquote><ul><li>前往如下路径<code>\themes\next\layout_macro\post.swig</code>，修改： </li></ul></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> &lt;span title=&quot;&#123;&#123; __(&apos;post.wordcount&apos;) &#125;&#125;&quot;&gt;</span><br><span class="line">&#123;&#123; wordcount(post.content) &#125;&#125; 字</span><br><span class="line"> &lt;/span&gt;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"> &lt;span title=&quot;&#123;&#123; __(&apos;post.min2read&apos;) &#125;&#125;&quot;&gt;</span><br><span class="line">&#123;&#123; min2read(post.content) &#125;&#125; 分钟</span><br><span class="line"> &lt;/span&gt;</span><br></pre></td></tr></table></figure><blockquote><ul><li>才可以看到显示：阅读时长 ≈ 2 分钟，但若是不需要显示 ≈ ，就修改：</li></ul></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% if theme.post_wordcount.item_text %&#125;</span><br><span class="line">&lt;span class=&quot;post-meta-item-text&quot;&gt;&#123;&#123; __(&apos;post.min2read&apos;) &#125;&#125; &amp;asymp;&lt;/span&gt;</span><br></pre></td></tr></table></figure><p>把<code>&amp;asymp;</code>删除。</p><h2 id="设置友情链接"><a href="#设置友情链接" class="headerlink" title="设置友情链接"></a>设置友情链接</h2><p>打开主题配置，示例：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">  # Blog rolls</span><br><span class="line">  links_icon: link</span><br><span class="line">  links_title: Links</span><br><span class="line">  links_layout: block</span><br><span class="line">  #links_layout: inline</span><br><span class="line">  links:</span><br><span class="line">NexT主题的优化定制修改指南: https://blog.csdn.net/u012195214/article/details/79204088</span><br></pre></td></tr></table></figure><h2 id="侧边栏友情链接及菜单等旁边的图标"><a href="#侧边栏友情链接及菜单等旁边的图标" class="headerlink" title="侧边栏友情链接及菜单等旁边的图标"></a>侧边栏友情链接及菜单等旁边的图标</h2><p>复制图标名字即可，<a href="https://fontawesome.com/icons?from=io" target="_blank" rel="noopener">图标库</a>或<a href="http://fontawesome.dashgame.com/" target="_blank" rel="noopener">Font Awesome</a><br>格式如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">  social:</span><br><span class="line">GitHub: https://github.com/SleepingCAT526 || github</span><br><span class="line">知乎: https://www.zhihu.com/signin?next=%2F || telegram</span><br><span class="line">E-Mail: mailto:2639374992@qq.com || envelope</span><br><span class="line">bilibili: https://www.bilibili.com || television</span><br><span class="line">#Google: https://plus.google.com/yourname || google</span><br><span class="line">#Twitter: https://twitter.com/yourname || twitter</span><br></pre></td></tr></table></figure><h2 id="移动端显示-back-to-top-按钮和侧栏"><a href="#移动端显示-back-to-top-按钮和侧栏" class="headerlink" title="移动端显示 back-to-top 按钮和侧栏"></a>移动端显示 back-to-top 按钮和侧栏</h2><p>打开主题配置，修改为：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Enable sidebar on narrow view</span><br><span class="line">onmobile: true</span><br></pre></td></tr></table></figure><p>详情参考：<a href="https://blog.csdn.net/u012294515/article/details/83094693#_backtotop__329" target="_blank" rel="noopener">Hexo | NexT打造一个炫酷博客</a></p><h2 id="修改文章底部-号标签-改为图标"><a href="#修改文章底部-号标签-改为图标" class="headerlink" title="修改文章底部#号标签,改为图标"></a>修改文章底部#号标签,改为图标</h2><p>进入路径<code>/themes/next/layout/_macro/post.swig</code>，搜索<code>rel=&quot;tag&quot;&gt;#</code>，将<code>#</code>换成<code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code></p><h2 id="侧边栏头像"><a href="#侧边栏头像" class="headerlink" title="侧边栏头像"></a>侧边栏头像</h2><p>切记，这里你要自己把图片截图成正方形的，不然结果是椭圆的，这与微信等老是要截图成正方形是一样的道理。</p><blockquote><ul><li>头像设置圆形,停留旋转效果<br>  进入路径<code>themes\next\source\css\_common\components\sidebar\sidebar-author.styl</code>，将原始的<code>.site-author-image</code>这一段的内容修改为：</li></ul></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> .site-author-image &#123;</span><br><span class="line"> display: circle;</span><br><span class="line"> margin: 0 auto;</span><br><span class="line"> padding: $site-author-image-padding;</span><br><span class="line"> max-width: $site-author-image-width = 100px;</span><br><span class="line"> height: $site-author-image-height = 100px;</span><br><span class="line"> border: $site-author-image-border-width solid $site-author-image-border-color;</span><br><span class="line"> border-radius: 100%;</span><br><span class="line"> transition: 1s all;</span><br><span class="line"> cursor: pointer;  </span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> .site-author-image:hover &#123;</span><br><span class="line">transform: rotate(360deg);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><blockquote><ul><li><a href="http://mashirosorata.vicp.io/HEXO-NEXT%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE.html" target="_blank" rel="noopener">侧边栏头像的链接</a><br>当把鼠标移到侧边栏里的头像上时，鼠标样式变为pointer，点击头像将把页面转向指定链接。</li></ul><p>1.修改鼠标样式<br>在<code>themes/next/layout/source/css/_common/componets/sidebar</code>文件夹下打开<code>sidebar-author.styl</code>文件，在<code>.site-author-image{}</code>内添加<code>cursor: pointer;</code><br>如：</p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.site-author-image &#123;</span><br><span class="line">                        display: block;</span><br><span class="line">                        margin: 0 auto;</span><br><span class="line">                        padding: $site-author-image-padding;</span><br><span class="line">                        max-width: $site-author-image-width;</span><br><span class="line">                        height: $site-author-image-height;</span><br><span class="line">                        border: $site-author-image-border-width solid $site-author-image-border-color;</span><br><span class="line">                        cursor: pointer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.添加链接<br>在<code>themes/next/layout/source/js/src</code>文件夹下打开<code>motion.js</code>文件，在顶部其中添加代码：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> $(&apos;.site-author-image&apos;).click(function()&#123;</span><br><span class="line">window.location.href=&quot;自定义链接&quot;;</span><br><span class="line"> &#125;);</span><br></pre></td></tr></table></figure><h2 id="文章"><a href="#文章" class="headerlink" title="文章"></a>文章</h2><blockquote><ul><li>文章末尾添加”本文结束”标记<br>修改在<code>themes/next/layout/_macro/post.swig</code>中，在<code>wechat-subscriber.swig</code>之前添加如下代码：</li></ul></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">  + &lt;div style=&quot;text-align:center;color: #ccc;font-size:14px;&quot;&gt;---------------- The End ----------------&lt;/div&gt;</span><br><span class="line">&#123;% if theme.wechat_subscriber.enabled and not is_index %&#125;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">&#123;% include &apos;wechat-subscriber.swig&apos; %&#125;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><blockquote><ul><li>文章末尾追加版权信息,增加版权有两种方式</li></ul><p>1.修改主题配置文件,搜索<code>post_copyright</code></p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> post_copyright:</span><br><span class="line"> - enable: false</span><br><span class="line"> + enable: true</span><br><span class="line">license: CC BY-NC-SA 3.0</span><br><span class="line">license_url: https://creativecommons.org/licenses/by-nc-sa/3.0/</span><br></pre></td></tr></table></figure><p>2.如果觉得默认不好看,则可以自定义样式,找到<code>themes/next/layout/_macro/post.swig</code>，在<code>footer</code>之前添加如下代码(添加之前确保已添加样式)：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">  &lt;div&gt;</span><br><span class="line">&lt;p id=&quot;div-border-left-red&quot;&gt;</span><br><span class="line"> &lt;b&gt;本文基于&lt;a target=&quot;_blank&quot; title=&quot;Creative Commons Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)&quot; href=&quot;http://creativecommons.org/licenses/by-sa/4.0/&quot;&gt; 知识共享署名-相同方式共享 4.0 &lt;/a&gt;国际许可协议发布&lt;/b&gt;&lt;br/&gt;</span><br><span class="line">&lt;span&gt;</span><br><span class="line">&lt;b&gt;本文地址：&lt;/b&gt;&lt;a href=&quot;&#123;&#123; url_for(page.path) &#125;&#125;&quot; title=&quot;&#123;&#123; page.title &#125;&#125;&quot;&gt;&#123;&#123; page.permalink &#125;&#125;&lt;/a&gt;&lt;br/&gt;&lt;b&gt;转载请注明出处，谢谢！&lt;/b&gt;</span><br><span class="line">&lt;/span&gt;</span><br><span class="line">&lt;/p&gt;</span><br><span class="line">  &lt;/div&gt;</span><br></pre></td></tr></table></figure><blockquote><ul><li>设置文章加密访问<br>  打开<code>themes/next/layout/_partials/head.swig</code>文件，在``之前插入代码：</li></ul></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> &lt;script&gt;</span><br><span class="line">(function()&#123;</span><br><span class="line">if(&apos;&#123;&#123; page.password &#125;&#125;&apos;)&#123;</span><br><span class="line">if (prompt(&apos;请输入密码&apos;) !== &apos;&#123;&#123; page.password &#125;&#125;&apos;)&#123;</span><br><span class="line">alert(&apos;密码错误&apos;);</span><br><span class="line">history.back();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)();</span><br><span class="line"> &lt;/script&gt;</span><br></pre></td></tr></table></figure><p>然后写文章时加上<code>password</code></p><h2 id="网页加载进度条"><a href="#网页加载进度条" class="headerlink" title="网页加载进度条"></a>网页加载进度条</h2><p>编辑主题配置文件搜索<code>pace</code>，将其值改为<code>ture</code>就可以了，选择一款你喜欢的样式。</p><h2 id="如何在README-md文件中添加图片"><a href="#如何在README-md文件中添加图片" class="headerlink" title="如何在README.md文件中添加图片"></a><a href="https://www.cnblogs.com/hongmaju/p/6873720.html" target="_blank" rel="noopener">如何在README.md文件中添加图片</a></h2><p>在标题里的链接的关于添加图片的方法，经过测试，比较有效的方法不是直接copy浏览器里的链接地址，而是在图片那里右键，选择复制图片链接，这两个的链接是不一样的。</p><h2 id="更换博客背景图"><a href="#更换博客背景图" class="headerlink" title="更换博客背景图"></a>更换博客背景图</h2><p>打开<code>\themes\next\source\css\_custom\</code>文件夹下的<code>custom.styl</code>文件，添加如下代码：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">  //背景图</span><br><span class="line">  body &#123; </span><br><span class="line">background-image: url(/images/background.jpg);</span><br><span class="line">background-attachment: fixed; // 不随屏幕滚动而滚动fixed,scroll,inherit</span><br><span class="line">background-repeat: no-repeat; // 如果背景图不够屏幕大小则重复铺，改为no-repeat则表示不重复铺</span><br><span class="line">background-size: cover; // contain等比例铺满屏幕 //cover拉伸铺满</span><br><span class="line">background-position: bottom;//x,y轴调整</span><br><span class="line">+mobile()&#123;</span><br><span class="line"> //background-position: 0% -20%;https://i.loli.net/2018/12/29/5c270a0523154.jpg</span><br><span class="line"> //https://i.loli.net/2018/12/29/5c270fc2bfcad.png</span><br><span class="line"> background-image: url(https://ziyuan.lruihao.cn/images/bg_cell.png);</span><br><span class="line"> background-size: cover;</span><br><span class="line">&#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="音乐播放器-APlayer"><a href="#音乐播放器-APlayer" class="headerlink" title="音乐播放器 APlayer"></a>音乐播放器 APlayer</h2><p>执行<code>npm install aplayer --save</code><br>参考链接：<br>1.<a href="http://mashirosorata.vicp.io/HEXO-NEXT%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE.html" target="_blank" rel="noopener">APlayer-Controler</a><br>2.<a href="https://blog.yleao.com/2018/0902/hexo%E4%B8%8A%E7%9A%84aplayer%E5%BA%94%E7%94%A8.html" target="_blank" rel="noopener">hexo上的aplayer应用</a><br>3.<a href="https://aplayer.js.org/#/zh-Hans/?id=%E6%92%AD%E6%94%BE%E5%88%97%E8%A1%A8" target="_blank" rel="noopener">APlayer官方</a><br>4.<a href="https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md" target="_blank" rel="noopener">hexo-tag-aplayer</a><br>5.<a href="https://helloblack2017.github.io/2018/04/22/use-aplayer/" target="_blank" rel="noopener">Hexo 使用 APlayer 播放音乐</a><br>6.<a href="https://github.com/metowolf/MetingJS" target="_blank" rel="noopener">MetingJS</a></p><h2 id="网易云音乐mp3外链、真实地址下载方法"><a href="#网易云音乐mp3外链、真实地址下载方法" class="headerlink" title="网易云音乐mp3外链、真实地址下载方法"></a><a href="https://www.cnblogs.com/MirageFox/p/7995929.html" target="_blank" rel="noopener">网易云音乐mp3外链、真实地址下载方法</a></h2><p>一个网易音乐外链地址长期有效，很简单的方法：</p><blockquote><ul><li>第一步打开网易云音乐，随便找到一首歌，播放，复制网址的ID，<br>例如：杨钰莹的心雨，网址是：<br><a href="http://music.163.com/#/song?id=317151" target="_blank" rel="noopener">http://music.163.com/#/song?id=317151</a></li><li>很明显，ID是317151<br>那么，这首歌的真实地址就是：<br><a href="http://music.163.com/song/media/outer/url?id=317151.mp3" target="_blank" rel="noopener">http://music.163.com/song/media/outer/url?id=317151.mp3</a></li><li>这个地址不会失效的；<br>这就得到一个下载公式：<br><a href="http://music.163.com/song/media/outer/url?id=ID数字.mp3" target="_blank" rel="noopener">http://music.163.com/song/media/outer/url?id=ID数字.mp3</a><br>把上面红色部分ID数字换成网易云播放页面的id即可。</li></ul></blockquote><h2 id="视频播放"><a href="#视频播放" class="headerlink" title="视频播放"></a>视频播放</h2><p><a href="https://www.zhihu.com/question/48688433" target="_blank" rel="noopener">Hexo 播放器插件 hexo-tag-dplayer 该如何使用？</a></p><h2 id="友情链接："><a href="#友情链接：" class="headerlink" title="友情链接："></a>友情链接：</h2><p><a href="https://blog.csdn.net/u012195214/article/details/79204088" target="_blank" rel="noopener">NexT主题的优化定制修改指南</a><br><a href="http://www.html5code.net/sucai/" target="_blank" rel="noopener">html5模板</a><br><a href="https://neveryu.github.io/2017/07/15/hexo-next-five/" target="_blank" rel="noopener">Hexo-NexT搭建个人博客（五）</a><br><a href="https://segmentfault.com/a/1190000009544924" target="_blank" rel="noopener">hexo的next主题个性化配置教程</a><br><a href="http://www.pianshen.com/article/2979320088/" target="_blank" rel="noopener">hexo的next主题个性化配置</a><br><a href="https://blog.rmiao.top/hexo-fold-block/" target="_blank" rel="noopener">Hexo next博客添加折叠块功能添加折叠代码块</a><br><a href="https://www.simon96.online/2018/10/12/hexo-tutorial/" target="_blank" rel="noopener">【持续更新】最全Hexo博客搭建+主题优化+插件配置+常用操作+错误分析</a><br><a href="https://www.runoob.com/markdown/md-tutorial.html" target="_blank" rel="noopener">Markdown 教程</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://github.com/SleepingCAT526/SleepingCAT/blob/master/images/%E5%9F%BA%E4%BA%8EGithub+Hexo%E5%B8%83%E7%BD%AENext%EF%BC%88Pisces%EF%BC%89%E4%B8%BB%E9%A2%98.jpg?raw=true&quot; alt=&quot;Image text&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="github,hexo,next" scheme="https://sleepingcat526.github.io/SleepingCAT/tags/github-hexo-next/"/>
    
  </entry>
  
  <entry>
    <title>ACCESS中筛选并保留指定日期的整点半点</title>
    <link href="https://sleepingcat526.github.io/SleepingCAT/2019/09/18/ACCESS%E4%B8%AD%E7%AD%9B%E9%80%89%E5%B9%B6%E4%BF%9D%E7%95%99%E6%8C%87%E5%AE%9A%E6%97%A5%E6%9C%9F%E7%9A%84%E6%95%B4%E7%82%B9%E5%8D%8A%E7%82%B9/"/>
    <id>https://sleepingcat526.github.io/SleepingCAT/2019/09/18/ACCESS中筛选并保留指定日期的整点半点/</id>
    <published>2019-09-17T16:00:00.000Z</published>
    <updated>2019-12-28T14:14:26.715Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\SleepingCAT\assets\css\APlayer.min.css"><script src="\SleepingCAT\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\SleepingCAT\assets\js\Meting.min.js"></script><p>基于365版本的OFFICE实验。<br>首先说明下，用于实验的ACCESS文件只支持删除操作，不能通过复制粘贴来更新数据。<br>打开ACCESS文件之后，点击所有访问对象，选择浏览类别中的表和相关视图，目的是为了后面创建查询向导或查询设计的时候能主动将原表和查询表放在一起免得到处去找，也有利于提升用户体验。<br>首先，双击你想筛选的表，后在创建界面创建查询向导或查询设计，选择简单查询设计即可，确定，在可用字段下面点击你想筛选的列名，点击&gt;右移到选定字段，点击下一步，选择修改查询设计，点击完成。<br>在写着表名查询那里右键，打开SQL视图模式，也可以在屏幕的右下方找到数据表视图，SQL视图，设计视图三种模式的切换按钮。<br>下面是个人的思路，首先，根据学习过的SQL数据库知识，写了两条代码在ACCESS中进行筛选非整点半点的数据，一直报错….后面查了资料才发现，ACCESS中的SQL查询只能存在一条SQL语句！</p><p>接下来根据</p><pre><code>SELECT 表名.[列名]  FROM 表名  WHERE 表名.[列名]=#指定日期#  IN 一段时间  </code></pre><p>写了一段代码，代码如下：</p><pre><code>SELECT Record.[DT]  FROM Record  WHERE Record.[DT]=#2019/9/8#  IN ((Record.[DT] NOT LIKE &quot;2019/9/8 ??:00:0？&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ?:00:0？&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ??:00:0？&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ?:00:0？&quot;))  </code></pre><p>————由于?:00:0？中零几秒的数据也要保留，不用保留零几秒的可以自行将所有的0？改为00。</p><p>然后Ctrl+S保存，双击查询表，发现不是自己想要的，筛选出来的全是整点半点的数据。。。。<br>————思路是：删除非整点半点的时间段，从而只保留整点半点的数据<br>然后想着将NOT LIKE中的NOT删除又会怎样呢？<br>结果发现，筛选语句完全没有用，跟没筛选前一模一样。。。。</p><p>纠结着，突然灵光一闪，既然NOT LIKE筛选出的是LIKE的数据，那我能不能根据NOT LIKE非整点半点的时间段来得到“非整点半点的时间段”，然后删除非整点半点的时间段，从而只保留整点半点的数据呢?</p><p>下面前面加打勾的是要保留的，加叉是要删除掉的。</p><pre><code>✔ 2019/9/8 ??:00:0?  2019/9/8 ?:00:0?  ✔ 2019/9/8 ??:30:0?  2019/9/8 ?:30:0?  ✘ 2019/9/8 ??:01:??~2019/9/8 ??:09:??  ✘ 2019/9/8 ??:00:1?~2019/9/8 ??:00:5?  ✘ 2019/9/8 ??:1?:??~2019/9/8 ??:5?:??(2019/9/8 ??:3?:??除外)  ✘ 2019/9/8 ??:31:??~2019/9/8 ??:39:??  ✘ 2019/9/8 ??:30:1?~2019/9/8 ??:30:5?  ✘ 2019/9/8 ?:01:??2019/9/8 ?:09:??✘ 2019/9/8 ?:00:1?2019/9/8 ?:00:5?✘ 2019/9/8 ?:1?:??2019/9/8 ?:5?:??(2019/9/8 ?:3?:??除外)✘ 2019/9/8 ?:31:??2019/9/8 ?:39:??✘ 2019/9/8 ?:30:1?~2019/9/8 ?:30:5?  </code></pre><p>代码如下：</p><pre><code>SELECT Record.[DT]  FROM Record  WHERE Record.[DT]=#2019/9/8#  IN (((Record.[DT] NOT LIKE &quot;2019/9/8 ??:01:??&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ??:02:??&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ??:03:??&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ??:04:??&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ??:05:??&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ??:06:??&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ??:07:??&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ??:08:??&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ??:09:??&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ??:00:1?&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ??:00:2?&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ??:00:3?&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ??:00:4?&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ??:00:5?&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ??:1?:??&quot;)  AND (Record.[DT] NOT LIKE &quot;2019/9/8 ??:2?:??&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ??:4?:??&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ??:5?:??&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ??:31:??&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ??:32:??&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ??:33:??&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ??:34:??&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ??:35:??&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ??:36:??&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ??:37:??&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ??:38:??&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ??:39:??&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ??:30:1?&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ??:30:2?&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ??:30:3?&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ??:30:4?&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ??:30:5?&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ?:01:??&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ?:02:??&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ?:03:??&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ?:04:??&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ?:05:??&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ?:06:??&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ?:07:??&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ?:08:??&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ?:09:??&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ?:00:1?&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ?:00:2?&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ?:00:3?&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ?:00:4?&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ?:00:5?&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ?:1?:??&quot;)  AND (Record.[DT] NOT LIKE &quot;2019/9/8 ?:2?:??&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ?:4?:??&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ?:5?:??&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ?:31:??&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ?:32:??&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ?:33:??&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ?:34:??&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ?:35:??&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ?:36:??&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ?:37:??&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ?:38:??&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ?:39:??&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ?:30:1?&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ?:30:2?&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ?:30:3?&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ?:30:4?&quot;) AND (Record.[DT] NOT LIKE &quot;2019/9/8 ?:30:5?&quot;))ORDER BY Record.[DT] ASC)</code></pre><p>想要更换日期的话，可以将其保存到.TXT文件中，利用TXT文件的替换功能即可轻松快捷完成指定日期的替换。</p><p>但如果日期格式为2019/9/8的话，即凌晨的2019/9/8 00：00：00显示为2019/9/8的话，此公式不适用，可以通过升序当天日期自行解决多出的这一部分时间点（代码已升序）。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://github.com/SleepingCAT526/SleepingCAT/blob/master/images/ACCESS%E4%B8%AD%E7%AD%9B%E9%80%89%E5%B9%B6%E4%BF%9D%E7%95%99%E6%8C%87%E5%AE%9A%E6%97%A5%E6%9C%9F%E7%9A%84%E6%95%B4%E7%82%B9%E5%8D%8A%E7%82%B9.jpg?raw=true&quot; alt=&quot;Image text&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ACCESS" scheme="https://sleepingcat526.github.io/SleepingCAT/tags/ACCESS/"/>
    
  </entry>
  
</feed>
